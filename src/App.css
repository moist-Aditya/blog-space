@import url('https://fonts.googleapis.com/css2?family=Roboto+Flex:opsz,wght@8..144,200;8..144,400;8..144,700;8..144,900&display=swap');

/* Reset start */
/* makes sizing simpler */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* remove default spacing */
/* force styling of type through styling, rather than elements */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* dark mode user-agent-styles */
/* improves punctuation in supported browsers */
html {
  color-scheme: dark light;
  hanging-punctuation: first last;
  scroll-behavior: smooth;
}

/* min body height */
body {
  min-height: 100svh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* responsive images/videos */
img,
picture,
svg,
video {
  display: block;
  max-width: 100%;
}

/* Improved heading in supported browsers */
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

/* improve readability with max-width on paragraphs and lists */
/* prevent orphans in supported browsers */
p,
li {
  max-width: var(--p-max-width, 65ch);
  text-wrap: pretty;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit;
}

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
      scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
  }
}

/* Reset ends here */


/* Utility Classes start */
:root {
  --clr-primary: #EEE2DE;
  --clr-highlight: #ffe49b;
  --clr-dark: #B31312;
  --clr-black: #2B2A4C;
}

.flex {
  display: flex;
  flex-direction: row;
  gap: var(--gap, 1rem);
}
.sr-only {
  display: none;
}
/* Utility classes end here */



/* My CSS start */
html {
  color-scheme: dark;
}
body {
  font-family: 'Roboto Flex', sans-serif;
  color: var(--clr-primary);
  font-size: 18px;
  font-weight: 400;
  background-attachment: fixed;
  background-image: url("./earth-bg.jpg");
  background-position: top center;
  background-repeat: no-repeat;
  background-size: cover;

  overflow-x: hidden;
}
h1 {
  font-size: 3rem;
  font-weight: 900;
}
h2 {
  font-size: 2rem;
  font-weight: 700;
}
h3 {
  font-size: 1.5rem;
  font-weight: 400;
}
p {
  font-size: 1rem;
  font-weight: 200;
  max-width: 1000px;
}

/* Header start */
.logo {
  width: 4rem;
  aspect-ratio: 1;
  margin: .6rem;

  filter: invert(100%) sepia(100%) saturate(0%) hue-rotate(34deg) brightness(105%) contrast(104%);
}
.primary-header {
  align-items: center;
  justify-content: space-between;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 100;
}
.primary-navigation {
  z-index: 1000;
  padding: 1rem;
  padding-right: clamp(20%, 40dvw, 80dvw);
  background-color: hsla(0, 0%, 100%, .05);
  backdrop-filter: blur(.2rem);
}
.primary-navigation a {
  text-decoration: none;
  color: var(--clr-primary);
  text-transform: uppercase;
  cursor: pointer;
}
.primary-navigation a:hover {
  color: hsla(0, 0%, 100%, .5);
}
.mobile-nav-toggle {
  z-index: 9999;
  position: absolute;
  top: 2rem;
  right: 2rem;
  width: 2rem;
  aspect-ratio: 1;
  background: none;
  background-image: url("./hamburger.svg");
  background-size: contain;
  background-repeat: no-repeat;
  border: none;
  cursor: pointer;

  display: none;
}

@media (max-width: 800px) {
  .primary-navigation {
    position: fixed;
    inset: 0 0 0 40%;
    padding: min(10rem, 20dvh) 2rem;
    background-color: hsla(0, 0%, 0%, .3);
    backdrop-filter: blur(.5rem);

    ul {
      flex-direction: column;
      --gap: 3rem;
    }

    translate: 100%;
    transition: translate 350ms ease-out;
  }
  .primary-navigation[data-visible="true"] {
    translate: 0%;
  }
  .mobile-nav-toggle[aria-expanded="true"] {
    background-image: url("./cross.svg");
  }
  .mobile-nav-toggle {
    display: block;
  }
}
/* Header end */

/* Main start */
main {
  margin-top: 5rem;
  padding-block: 1rem;
}
.content {
  max-width: min(95dvw, 1000px);
  margin-inline: auto;
}
.title {
  display: inline;
  position: relative;
  letter-spacing: 2px;
  color: var(--clr-dark);
  /* text-align: center; */
}
.title::after {
  content: '';
  display: block;
  position: absolute;
  bottom: 5%;
  left: 0;
  right: 30%;
  height: 3px;
  border-radius: 100%;
  z-index: -1;
  background-color: var(--clr-highlight);
}
.blog-container {
  margin: 2rem auto;
  padding: 1rem;
  border-radius: .1em;
  background-color: hsla(0, 0%, 0%, .8);
  backdrop-filter: blur(.2rem);
}
.blog-title {
  font-size: 2.4rem;
}
.blog-author {
  opacity: 0.7;
  font-size: .825rem;
  font-weight: 400;
  margin-left: 30%;
  margin-block: 1rem;
  padding: .4rem .8rem;
  color: var(--clr-black);
  filter: invert(.2rem);
  border-radius: 1em 0 0 1em;
  background: linear-gradient(90deg, rgba(238,226,222,1) 0%, rgba(238,226,222,0) 100%);

  span {
    font-size: 1rem;
    text-transform: uppercase;
    font-weight: 700;
  };
}
.blog-body {
  font-size: 1.05rem;
  font-weight: 400;
  color: var(--clr-highlight);
}

article {
  padding: 1rem;
  background-color: hsla(0, 0%, 0%, .3);
  backdrop-filter: blur(.6rem);
  margin-top: 1rem;

  .blog-body {
    font-size: 1.3rem;
  };
  .blog-title {
    font-size: 2.6rem;
    font-weight: 900
  };
}


.create form{
  flex-direction: column;
  --gap: 2rem;
  margin-top: 2rem;
  background-color: hsla(0, 0%, 0%, .8);
  backdrop-filter: blur(.2rem);
  padding: 2rem 1rem;
}
.create form label {
  color: var(--clr-highlight);
  font-size: 1.8rem;
  font-weight: 700;
}
.create form input, textarea {
  /* border: var(--clr-dark) 2px solid; */
  border: none;
  background: hsla(0, 0%, 100%, .1);
  color: var(--clr-primary);
  border-radius: .1em;
  padding: .4rem 1rem;
  font-size: 1.05rem;
}
.create form textarea {
  width: 100%;
  height: 200px;
  resize: none;
}
.form-field {
  flex-direction: column;
  --gap: .625rem;
}
.create button {
  display: block;
  margin-inline: auto;
  margin-top: 1rem;
  padding: .625rem 1.2rem;
  border: var(--clr-highlight) solid 2px;
  border-radius: 1em;
  font-size: 1.4rem;
  background: transparent;
  color: var(--clr-highlight);
  font-weight: 700;
  cursor: pointer;
  transition: all linear 100ms;
}
.create button:hover {
  background-color: var(--clr-highlight);
  color: var(--clr-dark);
}
/* Main end */

